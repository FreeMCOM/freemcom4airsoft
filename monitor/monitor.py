#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.6.8 on Sat Oct 25 18:18:31 2014
#

port_default = "COM3"					#デフォルトのシリアルポートを指定

import sys
import os.path
import string
import wx							# begin wxGlade: dependencies
import gettext							# end wxGlade
from mcom import  *					#mcomのクラス定義ファイルをインポート




def PortNotFound():					#ポートが見つからない時の処理サブルーチン
    print (u"ポート %s が見つかりません。\n" ) % (port)
    print (u"使用法 :")
    print (u" %s  <ポート名> ")  % (sys.argv[0])
    print (u"通常、ポート名はWindowsの場合はCOMx, Linuxの場合は/dev/ttyACMx のようになります。 ")
    print (u"デフォルトでは %s が使用されます。\n") % (port_default)
    print (u"エンターキーを押してください・・・")
    raw_input()
    exit()



####シリアルポートの指定
if len(sys.argv) == 1 :
    port = port_default
else:
    port = sys.argv[1]


####シリアルポート番号の取得・ウインドウタイトルでの表示名設定・ポート有無判定
if sys.platform == "win32" :
    ###数字のみ抽出
    port = port.upper()						#一旦全て大文字に変換　(CoMとかComとかに対処するため)
    port = port.replace("COM", "")				#"COM"の文字列を削除
    port = int(port)	 						#int型に変換
    port -= 1								#番号を1引く
    portname = "COM" + str(port +1)				#文字列操作して表示用の名前にする
#    if serial.Serial.readable(port) == False	:			#当該ポートが存在するかチェック
#        PortNotFound()

else:
    portname = port
    if os.path.exists(str(port) ) == False :			#当該ポート(正確には、デバイスファイル)が存在するか否かチェック
        PortNotFound()

print (u"ポート %s を使用します") % (portname)



class MainWindow(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainWindow.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, wx.ID_ANY, _(u"起動まで"))
        self.label_2 = wx.StaticText(self, wx.ID_ANY, "")
        self.label_3 = wx.StaticText(self, wx.ID_ANY, _(u"秒長押し"))
        self.label_4 = wx.StaticText(self, wx.ID_ANY, _(""))
        self.label_5 = wx.StaticText(self, wx.ID_ANY, "")
        self.label_6 = wx.StaticText(self, wx.ID_ANY, _(""))
        self.button_1 = wx.Button(self, wx.ID_ANY, _(u"リセット"))
        self.button_2 = wx.Button(self, wx.ID_ANY, _(u"終了"))

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

        self.Bind(wx.EVT_BUTTON, self.reset_button, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.exit_button, self.button_2)

        self.timer = wx.Timer(self)
        self.Bind(wx.EVT_TIMER, self.refresh)
        self.timer.Start(500)

    def __set_properties(self):
        # begin wxGlade: MainWindow.__set_properties
        self.SetTitle(_("MCOM Monitor   - " + portname ))
        self.label_1.SetFont(wx.Font(24, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.label_2.SetFont(wx.Font(24, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.label_3.SetFont(wx.Font(24, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.label_4.SetFont(wx.Font(24, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.label_5.SetFont(wx.Font(24, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.label_6.SetFont(wx.Font(24, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.button_1.SetFont(wx.Font(16, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.button_2.SetFont(wx.Font(16, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainWindow.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(3, 3, 0, 0)
        grid_sizer_1.Add(self.label_1, 0, 0, 0)
        grid_sizer_1.Add(self.label_2, 0, wx.ALIGN_CENTER_HORIZONTAL,  0)
        grid_sizer_1.Add(self.label_3, 0, 0, 0)
        grid_sizer_1.Add(self.label_4, 0, 0, 0)
        grid_sizer_1.Add(self.label_5, 0, wx.ALIGN_CENTER_HORIZONTAL,  0)
        grid_sizer_1.Add(self.label_6, 0, 0, 0)
        grid_sizer_1.Add(self.button_1, 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add(self.button_2, 0, 0, 0)
        sizer_1.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()

    def reset_button(self, event):  # wxGlade: MainWindow.<event_handler>
        mcom.reset(port)

    def exit_button(self, event):  # wxGlade: MainWindow.<event_handler>
        exit()


    def refresh(self, event):

        mcom.getdata()
        if mcom.mcom_mode == 0:
            self.mode0()

        elif mcom.mcom_mode == 1:
            self.mode1()

        elif mcom.mcom_mode == 2:
            self.mode2()

	elif mcom.mcom_mode == 3:
            self.mode3()


    def mode0(self):
        self.label_1.SetLabel(u"起動まで")
        self.label_2.SetLabel(mcom.disengage)
        self.label_3.SetLabel(u"秒長押し")

        self.label_4.SetLabel(u"")
        self.label_5.SetLabel(u"")
        self.label_6.SetLabel(u"")


    def mode1(self):
        self.label_1.SetLabel(u"解除まで")
        self.label_2.SetLabel(mcom.disengage)
        self.label_3.SetLabel(u"秒長押し")

        self.label_4.SetLabel(u"破壊まで")
        self.label_5.SetLabel(mcom.left)
        self.label_6.SetLabel(u"秒")

    def mode2(self):
        self.label_1.SetLabel(u"解除まで")
        self.label_2.SetLabel(mcom.disengage)
        self.label_3.SetLabel(u"秒長押し")

        self.label_4.SetLabel(u"破壊まで")
        self.label_5.SetLabel(mcom.left)
        self.label_6.SetLabel(u"秒")

    def mode3(self):
        self.label_1.SetLabel(u"破壊済み")
        self.label_2.SetLabel("")
        self.label_3.SetLabel("")

        self.label_4.SetLabel("")
        self.label_5.SetLabel("")
        self.label_6.SetLabel("")


        # end wxGlade

# end of class MainWindow
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    mcom = Mcom(port)	#Mcomのインスタンス生成
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MainWindow(None, wx.ID_ANY, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
