#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.6.8 on Mon Nov 10 23:41:15 2014
#

# This is an automatically generated file.
# Manual changes will be overwritten without warning!

port_default = "COM3"					#デフォルトのシリアルポートを指定

import sys
import os.path
import string
import wx							# begin wxGlade: dependencies
import gettext							# end wxGlade
from mcom import  *					#mcomのクラス定義ファイルをインポート
from MainWindow import MainWindow
from ErrorDialog import ErrorDialog





def HowToUse():					#ポートが見つからない時の処理サブルーチン
    print (u"使用法 :")
    print (u" %s  <ポート名> ")  % (sys.argv[0])
    print (u"通常、ポート名はWindowsの場合はCOMx, Linuxの場合は/dev/ttyACMx のようになります。 ")
    print (u"デフォルトでは %s が使用されます。\n") % (port_default)
#    print (u"エンターキーを押してください・・・")
#    raw_input()
#    exit()


def GetPort(port):
####シリアルポート番号の取得・ウインドウタイトルでの表示名設定・ポート有無判定
    if sys.platform == "win32" :
        ###数字のみ抽出
        port = port.upper()						#一旦全て大文字に変換　(CoMとかComとかに対処するため)
        port = port.replace("COM", "")				#"COM"の文字列を削除
        port = int(port)	 						#int型に変換
        port -= 1								#番号を1引く
        portname = "COM" + str(port +1)				#文字列操作して表示用の名前にする
    else:
        portname = port

    try:										#当該ポート(正確には、デバイスファイル)が存在するか否かチェック
        mcom = Mcom(port)						#Mcomのインスタンス生成
        print (u" %s を使用します") % (portname)
    except serial.serialutil.SerialException :
        print (u"%s が見つかりません。\n" ) % (portname)
        HowToUse()




if __name__ == "__main__":

    if len(sys.argv) == 1 :
        port = port_default
    elif sys.argv[1] == "help" :
        HowToUse()
    elif sys.argv[1] == "--help" :
        HowToUse()
    elif sys.argv[1] == "-h" :
        HowToUse()
    elif sys.argv[1] == "/?" :
        HowToUse()

    else:
        port = sys.argv[1]


    GetPort(port)

    gettext.install("app") # replace with the appropriate catalog name
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MainWindow(None, wx.ID_ANY, "")
    dialog_1 = ErrorDialog(None, wx.ID_ANY, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
